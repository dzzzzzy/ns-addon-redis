{"version":3,"sources":["../src/redis.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAIzC,qBACa,YAAY;IAEa,OAAO,CAAC,QAAQ,CAAC,WAAW;gBAAX,WAAW,EAAE,KAAK;IAG/D,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAIlD,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;CAGtE","file":"redis.service.d.ts","sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { KeyType, Redis } from 'ioredis';\n\nimport { REDIS_PROVIDER_TOKEN } from './redis.constants';\n\n@Injectable()\nexport class RedisService {\n    constructor(\n        @Inject(REDIS_PROVIDER_TOKEN) private readonly redisClient: Redis\n    ) { }\n\n    async hget(key: KeyType, field: string): Promise<string> {\n        return this.redisClient.hget(key, field);\n    }\n\n    async hset(key: KeyType, field: string, value: any): Promise<0 | 1> {\n        return this.redisClient.hset(key, field, value);\n    }\n}"]}